{"version":3,"sources":["Routes/Components/Header.tsx","api.ts","utils.ts","Routes/Components/Sliders.tsx","Routes/Home.tsx","Routes/Search.tsx","img/kakaoLogo.svg","img/faceBookLogo.svg","img/googleLogo.svg","img/tweeterLogo.svg","img/appleLogo.svg","img/lineLogo.svg","Routes/SignIn.tsx","Routes/SignUp.tsx","Routes/Start.tsx","Routes/Components/TvSliders.tsx","Routes/Tv.tsx","App.tsx","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","Items","ul","Item","li","props","theme","white","lighter","Search","form","Circle","span","red","Input","input","navVariants","top","backgroundColor","scroll","SignupBtn","button","Header","homeMatch","useRouteMatch","tvMatch","startMatch","signInMatch","signUpMatch","useState","searchOpen","setSearchOpen","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","useEffect","onChange","get","start","history","useHistory","useForm","register","handleSubmit","variants","animate","initial","to","alt","src","process","isExact","layoutId","onSubmit","data","push","keyword","svg","onClick","scaleX","prev","x","transition","type","fill","viewBox","xmlns","fillRule","d","clipRule","required","minLength","placeholder","color","API_KEY","BASE_PATH","getMovies","fetch","then","response","json","getTopRatedMovies","getPopularMovies","getUpcomingMovies","getTV","getTopRatedTV","getAiringTV","getLatestTV","makeImagePath","id","format","Slider","SliderBtn","Row","Box","bgPhoto","Info","black","rowVariants","hidden","back","window","innerWidth","visible","exiting","BoxVariants","normal","scale","hover","y","delay","duration","infoVariants","opacity","Overlay","BigMovie","BigCover","BigTitle","h3","IconWrap","Icons","IconCircle","BigInfo","BigOverview","p","SimWrap","SimInfo","SimCover","SimTitle","selectMovieId","Sliders","title","sliderNum","clickSlider","bigMovieMatch","simData","useQuery","movieId","index","setIndex","leaving","setLeaving","setBack","toggleLeaving","clickedMovie","params","results","find","movie","String","AnimatePresence","custom","onExitComplete","totalMovies","length","maxIndex","Math","floor","className","exit","slice","map","whileHover","backdrop_path","style","backgroundImage","release_date","vote_average","overview","list","Wrapper","Loader","Banner","Title","h2","Overview","SliderWrap","Home","isLoading","popular","topLated","upComing","setClickSlider","Wrap","location","useLocation","URLSearchParams","search","getSearchMovies","movieData","getSearchTv","tvData","console","log","name","SignInWrap","TitleWrap","InputWrap","SignInBtn","AnotherSignIn","SnsLogoWrap","SignIn","kakoLogo","faceBookLogo","googleLogo","tweeterLogo","appleLogo","lineLogo","SignUpWrap","CheckBoxWrap","SignUpBtn","SignUp","allChecked","setAllChecked","htmlFor","checked","Section","LogoImg","img","h1","Description","Button","BgVideo","Start","url","width","height","playing","muted","controls","light","zIndex","position","selectTvId","TvSliders","tvId","tv","totalTvs","first_air_date","Tv","topRadted","airing","latest","App","path","GlobalStyle","createGlobalStyle","darker","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.daf2afad.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\r\nimport { Link, Route, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Nav = styled(motion.nav)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  font-size: 14px;\r\n  padding: 20px 60px;\r\n  color: white;\r\n  font-family: \"GmarketSansMedium\";\r\n    font-weight: bold;\r\n    z-index: 99;\r\n`;\r\nconst Col = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Logo = styled(motion.div)`\r\n  margin-right: 50px;\r\n  img{\r\n    width: 100px;\r\n    height: 34px;\r\n}\r\n`;\r\nconst Items = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Item = styled(motion.li)`\r\n  margin-right: 20px;\r\n  transition: color 0.3s ease-in-out;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  font-weight: bold;\r\n  &:hover {\r\n    color: ${(props) => props.theme.white.lighter};\r\n  };\r\n`;\r\nconst Search = styled.form`\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  cursor: pointer;\r\n  svg {\r\n    height: 25px;\r\n  }\r\n  z-index: 1;\r\n`;\r\nconst Circle = styled(motion.span)`\r\n    position: absolute;\r\n    width: 5px;\r\n    height: 5px;\r\n    border-radius: 5px;\r\n    bottom: -5px;\r\n    left: 0;\r\n    right: 0;\r\n    margin: 0 auto;\r\n    background-color: ${(props) => props.theme.red};\r\n`;\r\nconst Input = styled(motion.input)`\r\n    transform-origin: right center;\r\n    position: absolute;\r\n    left: -205px;\r\n    background-color: black;\r\n    border: 1px solid whitesmoke;\r\n    height: 35px;\r\n    width: 230px;\r\n    z-index: -10;\r\n    padding-left: 40px;\r\n    color: white;\r\n`;\r\nconst navVariants = {\r\n    top: {\r\n        backgroundColor: \"rgba(0, 0, 0, 0)\"\r\n    },\r\n    scroll: {\r\n        backgroundColor: \"rgba(0, 0, 0, 1)\"\r\n    },\r\n}\r\nconst SignupBtn = styled(motion.button)`  \r\n    font-weight: bold;\r\n    width: 100px;\r\n    height: 30px;\r\n    margin-left: 20px;\r\n    border: none;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n    transition: 0.5s;\r\n    &:hover{\r\n        background-color: rgba(255, 4, 88, 0.7);\r\n    }\r\n`;\r\n\r\ninterface IForm {\r\n    keyword: string;\r\n}\r\n\r\nfunction Header() {\r\n    const homeMatch = useRouteMatch(\"/home\");\r\n    const tvMatch = useRouteMatch(\"/tv\");\r\n    const startMatch = useRouteMatch(\"/\");\r\n    const signInMatch = useRouteMatch(\"/signIn\");\r\n    const signUpMatch = useRouteMatch(\"/signUp\");\r\n    const [searchOpen, setSearchOpen] = useState(false);\r\n    const inputAnimation = useAnimation();\r\n    const navAnimation = useAnimation();\r\n    const { scrollY } = useViewportScroll();\r\n    const toggleSearch = () => {\r\n        if (searchOpen) {\r\n            inputAnimation.start({ scaleX: 0, })\r\n        } else {\r\n            inputAnimation.start({ scaleX: 1, })\r\n        }\r\n        setSearchOpen((prev) => !prev);\r\n    };\r\n    useEffect(() => {\r\n        scrollY.onChange(() => {\r\n            if (scrollY.get() > 80) {\r\n                navAnimation.start(\"scroll\")\r\n            } else {\r\n                navAnimation.start(\"top\")\r\n            }\r\n        })\r\n    }, [scrollY, navAnimation]);\r\n    const history = useHistory();\r\n    const { register, handleSubmit } = useForm<IForm>();\r\n    const onVaild = (data: IForm) => {\r\n        history.push(`/search?keyword=${data.keyword}`);\r\n    }\r\n    return (\r\n        <Nav\r\n            variants={navVariants}\r\n            animate={navAnimation}\r\n            initial={\"top\"}>\r\n            <Col>\r\n                <Link to=\"/home\">\r\n                    <Logo>\r\n                        <img alt=\"logo\" src={`${process.env.PUBLIC_URL}/asset/monviewLogoVer2.png`} />\r\n                    </Logo>\r\n                </Link>\r\n                <Items>\r\n                    <Item>\r\n                        <Link to=\"/home\">\r\n                            홈 {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\r\n                        </Link>\r\n                    </Item>\r\n                    <Item>\r\n                        <Link to=\"/tv\">\r\n                            TV 시리즈 {tvMatch && <Circle layoutId=\"circle\" />}\r\n                        </Link>\r\n                    </Item>\r\n                    <Item>\r\n                    </Item>\r\n                    <Item>\r\n                    </Item>\r\n                </Items>\r\n            </Col>\r\n            <Col>\r\n                <Search onSubmit={handleSubmit(onVaild)}>\r\n                    <motion.svg\r\n                        onClick={toggleSearch}\r\n                        animate={{ x: searchOpen ? -200 : 0 }}\r\n                        transition={{ type: \"linear\" }}\r\n                        fill=\"currentColor\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n                            clipRule=\"evenodd\"\r\n                        ></path>\r\n                    </motion.svg>\r\n                    <Input\r\n                        {...register(\"keyword\", { required: true, minLength: 1 })}\r\n                        animate={inputAnimation}\r\n                        initial={{ scaleX: 0 }}\r\n                        transition={{ type: \"linear\" }}\r\n                        placeholder=\"원하는 제목, 장르, 배우를 검색해보세요!\"\r\n                    />\r\n                </Search>\r\n                <Route>\r\n                    {homeMatch || tvMatch || startMatch?.isExact || signUpMatch ?\r\n                        <Link to=\"signIn\">\r\n                            <SignupBtn color=\"red\">로그인</SignupBtn>\r\n                        </Link>\r\n                        :\r\n                        null\r\n                    }\r\n                    {signInMatch &&\r\n                        <Link to=\"signUp\">\r\n                            <SignupBtn>회원가입</SignupBtn>\r\n                        </Link>\r\n                    }\r\n                </Route>\r\n            </Col>\r\n        </Nav >\r\n    );\r\n}\r\n\r\nexport default Header;","const API_KEY = \"d0f275c0a96c3c0542cd3149a66bee14\";\r\nconst BASE_PATH = \"https://api.themoviedb.org/3\"\r\n\r\ninterface IMovie {\r\n    id: number;\r\n    backdrop_path: string;\r\n    poster_path: string;\r\n    title: string;\r\n    overview: string;\r\n    release_date: string;\r\n    vote_average: string;\r\n    name?: string;\r\n    first_air_date?: string;\r\n\r\n}\r\n\r\nexport interface IGetMoviesResult {\r\n    dates: {\r\n        maximum: string;\r\n        minimum: string;\r\n    };\r\n    page: number;\r\n    results: IMovie[];\r\n    total_pages: number;\r\n    total_results: number;\r\n}\r\n\r\nexport function getMovies() {\r\n    return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}&language=ko`).then((response) => response.json());\r\n}\r\nexport function getSimilarMovies(movieId: number) {\r\n    return fetch(`${BASE_PATH}/movie/${movieId}/similar?api_key=${API_KEY}&language=ko`).then((response) => response.json());\r\n}\r\nexport function getTopRatedMovies() {\r\n    return fetch(`${BASE_PATH}/movie/top_rated?api_key=${API_KEY}&language=ko`).then((response) => response.json());\r\n}\r\nexport function getPopularMovies() {\r\n    return fetch(`${BASE_PATH}/movie/popular?api_key=${API_KEY}&language=ko`).then((response) => response.json());\r\n}\r\nexport function getUpcomingMovies() {\r\n    return fetch(`${BASE_PATH}/movie/upcoming?api_key=${API_KEY}&language=ko`).then((response) => response.json());\r\n}\r\n\r\nexport function getTV() {\r\n    return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}&language=ko`).then((response) => response.json());\r\n}\r\nexport function getSimilarTV(tvId: number) {\r\n    return fetch(`${BASE_PATH}/tv/${tvId}/similar?api_key=${API_KEY}&language=ko`).then((response) => response.json());\r\n}\r\nexport function getTopRatedTV() {\r\n    return fetch(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}&language=ko`).then((response) => response.json());\r\n}\r\nexport function getAiringTV() {\r\n    return fetch(`${BASE_PATH}/tv/airing_today?api_key=${API_KEY}&language=ko`).then((response) => response.json());\r\n}\r\nexport function getLatestTV() {\r\n    return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}&language=ko&page=2`).then((response) => response.json());\r\n}\r\n\r\nexport function getSearchMovies(keyword: string) {\r\n    return fetch(`${BASE_PATH}/search/movie?api_key=${API_KEY}&language=ko&query=${keyword}&include_adult=true`).then((response) => response.json());\r\n}\r\nexport function getSearchTv(keyword: string) {\r\n    return fetch(`${BASE_PATH}/search/tv?api_key=${API_KEY}&language=ko&query=${keyword}&include_adult=true`).then((response) => response.json());\r\n}\r\n","export function makeImagePath(id: string, format?: string) {\r\n    return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`\r\n}","import { motion, useViewportScroll, AnimatePresence } from \"framer-motion\";\r\nimport { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { getSimilarMovies, IGetMoviesResult } from \"../../api\";\r\nimport { makeImagePath } from \"../../utils\";\r\n\r\nconst Slider = styled(motion.div)`\r\n    margin-top: 80px;\r\n    width: 100%;\r\n    position: relative;\r\n    top: -100px;\r\n    display: grid;\r\n    h1{\r\n        position: absolute;\r\n        top: -40px;\r\n        left: 20px;\r\n        font-weight: bold;\r\n        font-size: 20px;\r\n    }\r\n`;\r\nconst SliderBtn = styled.button`\r\n    width: 40px;\r\n    height: 200px;\r\n    z-index: 99;\r\n    background-color: rgba(255,255,255,0.4);\r\n    border: none;\r\n    cursor: pointer;\r\n    &:last-child{\r\n        position: absolute;\r\n        right: 0;\r\n    }\r\n`;\r\nconst Row = styled(motion.div)`\r\n    display: grid;\r\n    gap: 10px;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    margin-bottom: 5px;\r\n    position: absolute;\r\n    width: 100%;\r\n    padding: 0px 50px;\r\n`;\r\nconst Box = styled(motion.div) <{ bgPhoto: string }>`\r\n    background-image: url(${(props) => props.bgPhoto});\r\n    background-size: cover;\r\n    background-position: center center;\r\n    height: 200px;\r\n    font-size: 68px;\r\n    &:first-child{\r\n        transform-origin: center left;   /*{첫번째 box만 애니메이션 중심 왼쪽 중앙}*/\r\n    }\r\n    &:last-child{\r\n        transform-origin: center right; /*{마지막 box만 애니메이션 중심 왼쪽 중앙}*/\r\n    }\r\n    cursor: pointer;\r\n`;\r\nconst Info = styled(motion.div)`\r\n    padding: 10px;\r\n    background-color: ${(props) => props.theme.black.lighter};\r\n    opacity: 0;\r\n    position: absolute;\r\n    width: 100%;\r\n    bottom: 0;\r\n    h4{\r\n        text-align: center;\r\n        font-size: 18px;\r\n    }\r\n`;\r\nconst rowVariants = {\r\n    hidden: (back: boolean) => ({\r\n        x: back ? -window.innerWidth - 5 : window.innerWidth + 5,\r\n    }),\r\n    visible: {\r\n        x: 0,\r\n    },\r\n    exiting: (back: boolean) => ({\r\n        x: back ? window.innerWidth + 5 : -window.innerWidth - 5,\r\n    }),\r\n};\r\nconst BoxVariants = {\r\n    normal: {\r\n        scale: 1,\r\n    },\r\n    hover: {\r\n        scale: 1.3,\r\n        y: -50,\r\n        transition: {\r\n            delay: 0.3,\r\n            duration: 0.1,\r\n            type: \"tween\",\r\n        }\r\n    }\r\n};\r\nconst infoVariants = {\r\n    hover: {\r\n        opacity: 1,\r\n        transition: {\r\n            delay: 0.3,\r\n            duration: 0.1,\r\n            type: \"tween\",\r\n        }\r\n    }\r\n}\r\nconst Overlay = styled(motion.div)`\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    opacity: 0;\r\n`;\r\nconst BigMovie = styled(motion.div)`\r\n    position: absolute;\r\n    z-index: 99;\r\n    width: 40vw;\r\n    height: 100vh;\r\n    left: 0;\r\n    right: 0;\r\n    margin: 0 auto;\r\n    border-radius: 15px;\r\n    overflow: hidden;\r\n    background-color: ${(props) => props.theme.black.lighter};\r\n    `;\r\nconst BigCover = styled.div`\r\n    width: 100%;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    height: 400px;\r\n`;\r\nconst BigTitle = styled.h3`\r\n    color: ${(props) => props.theme.white.lighter};\r\n    padding: 20px;\r\n    font-size: 30px;\r\n    position: relative;\r\n    top: -130px;\r\n    `;\r\nconst IconWrap = styled.div`\r\n    padding-top: 10px;\r\n    padding-left: 10px;\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 20px;\r\n    `;\r\nconst Icons = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    \r\n`;\r\nconst IconCircle = styled(motion.div)`\r\n    margin-left: 20px;\r\n    width: 40px;\r\n    height: 40px;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    border: 1px solid rgba(255, 255, 255, 0.5);\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    &:hover{\r\n        background-color: rgba(255, 255, 255, 0.5);\r\n        border: 1px solid rgba(255, 255, 255, 0.7);\r\n    }\r\n    `;\r\nconst BigInfo = styled.span`\r\n    width: 100%;\r\n    margin-right: 30px;\r\n    padding-top: 10px;\r\n    padding-left: 120px;\r\n    font-family: \"GmarketSansLight\";\r\n    font-weight: bold;\r\n    font-size: 13px;\r\n    span{\r\n        font-family: \"GmarketSansMedium\";\r\n        font-weight: bold;\r\n    }\r\n`;\r\nconst BigOverview = styled.p`\r\n    padding: 20px;\r\n    color: ${(props) => props.theme.white.lighter};\r\n    top: -80px;\r\n    position: relative;\r\n`;\r\nconst SimWrap = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    position: relative;\r\n    top: -70px;\r\n`;\r\nconst SimInfo = styled.span`\r\n    font-family: \"GmarketSansMedium\";\r\n    font-weight: bold;\r\n    padding-left: 10px;\r\n    position: relative;\r\n    top: -70px;\r\n`;\r\nconst SimCover = styled.div`\r\n    width: 100%;\r\n    height: 250px;\r\n    margin: 0px 10px;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    position: relative;\r\n`;\r\nconst SimTitle = styled.div`\r\n    font-family: \"GmarketSansLight\";\r\n    font-weight: bold;\r\n    position: absolute;\r\n    bottom: 15px;\r\n    left: 0px;\r\n    right: 0px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n`;\r\n\r\nconst offset = 6;\r\nlet selectMovieId = 0;\r\nfunction Sliders({ data, title, sliderNum, clickSlider }: any) {\r\n    const { scrollY } = useViewportScroll();\r\n    const history = useHistory();\r\n    const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\r\n    const { data: simData } = useQuery<IGetMoviesResult>([\"simMovies\", selectMovieId], () => getSimilarMovies(selectMovieId));\r\n    const [index, setIndex] = useState(0);\r\n    const [leaving, setLeaving] = useState(false);\r\n    const [back, setBack] = useState(false);\r\n    const increaseIndex = () => {\r\n        if (data) { // 만약 data가 없을때 오류 방지를 위해\r\n            if (leaving) return;\r\n            setBack(false);\r\n            toggleLeaving();\r\n            const totalMovies = data?.results.length - 1; // 메인 영화 1개 빼고\r\n            const maxIndex = Math.floor(totalMovies / offset) - 1; // 실수가 나올 수 도 있으니 무조건 내림 처리 (추가 1 ~ 2개 영화 안보이기)\r\n            setIndex((prev) => prev === maxIndex ? 0 : prev + 1);\r\n        }\r\n    };\r\n    const decreaseIndex = () => {\r\n        if (data) { // 만약 data가 없을때 오류 방지를 위해\r\n            if (leaving) return;\r\n            setBack(true);\r\n            toggleLeaving();\r\n            const totalMovies = data?.results.length - 1; // 메인 영화 1개 빼고\r\n            const maxIndex = Math.floor(totalMovies / offset) - 1; // 실수가 나올 수 도 있으니 무조건 내림 처리 (추가 1 ~ 2개 영화 안보이기)\r\n            setIndex((prev) => prev === 0 ? maxIndex : prev - 1);\r\n        }\r\n    };\r\n    const toggleLeaving = () => setLeaving((prev) => !prev);\r\n    const onBoxClicked = (movieId: number) => {\r\n        history.push(`/movies/${movieId}`);\r\n        selectMovieId = movieId;\r\n    };\r\n    const onOverlayClick = () => history.push(\"/home\");\r\n    const clickedMovie = bigMovieMatch?.params.movieId && data?.results.find((movie: any) => String(movie.id) === bigMovieMatch.params.movieId);\r\n    return (\r\n        <>\r\n            <Slider>\r\n                <h1>{title}</h1>\r\n                <AnimatePresence custom={back} initial={false} onExitComplete={toggleLeaving}>\r\n                    <SliderBtn onClick={decreaseIndex}><i className=\"fas fa-chevron-left fa-2x\"></i></SliderBtn>\r\n                    <Row\r\n                        variants={rowVariants}\r\n                        custom={back}\r\n                        initial=\"hidden\"\r\n                        animate=\"visible\"\r\n                        exit=\"exiting\"\r\n                        transition={{ type: \"tween\", duration: 1 }}\r\n                        key={index}\r\n                    >\r\n                        {data?.results.slice(1)\r\n                            .slice(offset * index, offset * index + offset)\r\n                            .map((movie: any) => (\r\n                                <Box\r\n                                    layoutId={movie.id + \"\" + sliderNum}\r\n                                    key={movie.id + sliderNum}\r\n                                    whileHover=\"hover\"\r\n                                    initial=\"normal\"\r\n                                    variants={BoxVariants}\r\n                                    onClick={() => onBoxClicked(movie.id)}\r\n                                    transition={{ type: \"tween\" }}\r\n                                    bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\r\n                                ><Info variants={infoVariants} >\r\n                                        <h4>{movie.title}</h4>\r\n                                    </Info>\r\n                                </Box>\r\n                            ))}\r\n                    </Row>\r\n                </AnimatePresence>\r\n                <SliderBtn onClick={increaseIndex}><i className=\"fas fa-chevron-right fa-2x\"></i></SliderBtn>\r\n            </Slider>\r\n            <AnimatePresence>\r\n                {bigMovieMatch && sliderNum === clickSlider ?\r\n                    <>\r\n                        <Overlay\r\n                            onClick={onOverlayClick}\r\n                            animate={{ opacity: 1 }}\r\n                            exit={{ opacity: 0 }}\r\n                        />\r\n                        <BigMovie\r\n                            style={{ top: scrollY.get() + 100, }}\r\n                            layoutId={bigMovieMatch.params.movieId + sliderNum}\r\n                        >\r\n                            {clickedMovie &&\r\n                                <>\r\n                                    <BigCover style={{ backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(clickedMovie.backdrop_path, \"w500\")})` }} />\r\n                                    <IconWrap>\r\n                                        <Icons>\r\n                                            <IconCircle>\r\n                                                <i className=\"fas fa-plus\"></i>\r\n                                            </IconCircle>\r\n                                            <IconCircle>\r\n                                                <i className=\"far fa-thumbs-up\"></i>\r\n                                            </IconCircle>\r\n                                            <IconCircle>\r\n                                                <i className=\"far fa-thumbs-down\"></i>\r\n                                            </IconCircle>\r\n                                        </Icons>\r\n                                        <BigInfo>\r\n                                            <span>개봉일:</span> {clickedMovie.release_date} <br />\r\n                                            <span>평점:</span> {clickedMovie.vote_average}\r\n                                        </BigInfo>\r\n                                    </IconWrap>\r\n                                    <BigTitle>{clickedMovie.title}</BigTitle>\r\n                                    <BigOverview>{clickedMovie.overview}</BigOverview>\r\n                                </>\r\n                            }\r\n                            <SimInfo>이런 영화는 어때요?</SimInfo>\r\n                            <SimWrap>\r\n                                {simData?.results.slice(0, 4).map((list) => (\r\n                                    <SimCover key={list.id} style={{ backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(list.backdrop_path)})` }}>\r\n                                        <SimTitle>{list.title}</SimTitle>\r\n                                    </SimCover>\r\n                                ))}\r\n                            </SimWrap>\r\n                        </BigMovie>\r\n                    </>\r\n                    :\r\n                    null\r\n                }\r\n            </AnimatePresence>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Sliders;","import { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { getMovies, getPopularMovies, getTopRatedMovies, getUpcomingMovies, IGetMoviesResult } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport Sliders from \"./Components/Sliders\";\r\n\r\nconst Wrapper = styled.div`\r\nbackground-color: black;\r\noverflow-x: hidden;\r\noverflow-y: hidden;\r\n`;\r\nconst Loader = styled.div`\r\n    height: 20vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\nconst Banner = styled.div < { bgPhoto: string }>`\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    padding: 60px;\r\n    background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${(props) => props.bgPhoto});\r\n    background-size: cover;\r\n`;\r\nconst Title = styled.h2`\r\n    font-size: 68px;\r\n    font-family: \"GmarketSansMedium\";\r\n    font-weight: bold;\r\n`;\r\nconst Overview = styled.p`\r\n    font-size: 25px;\r\n    width: 50%;\r\n    font-family: \"GmarketSansLight\";\r\n`;\r\nconst SliderWrap = styled.div``;\r\n\r\n\r\nfunction Home() {\r\n    const { data, isLoading } = useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies);\r\n    const { data: popular } = useQuery<IGetMoviesResult>([\"popularMovies\", \"popular\"], getPopularMovies);\r\n    const { data: topLated } = useQuery<IGetMoviesResult>([\"topLatedMovies\", \"topLated\"], getTopRatedMovies);\r\n    const { data: upComing } = useQuery<IGetMoviesResult>([\"upComingMovies\", \"upComing\"], getUpcomingMovies);\r\n    const [clickSlider, setClickSlider] = useState(0);\r\n    return (\r\n        <Wrapper>{isLoading ? (\r\n            <Loader>Loading...</Loader>\r\n        ) : (\r\n            <>\r\n                <Banner bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}>\r\n                    <Title>{data?.results[0].title}</Title>\r\n                    <Overview>{data?.results[0].overview}</Overview>\r\n                </Banner>\r\n                <SliderWrap onClick={() => setClickSlider(1)}>\r\n                    <Sliders data={popular} title=\"지금 바로 최신영화를 만나세요!\" sliderNum={1} clickSlider={clickSlider} />\r\n                </SliderWrap>\r\n                <SliderWrap onClick={() => setClickSlider(2)}>\r\n                    <Sliders data={data} title=\"극장에서 상영중!\" sliderNum={2} clickSlider={clickSlider} />\r\n                </SliderWrap>\r\n                <SliderWrap onClick={() => setClickSlider(3)}>\r\n                    <Sliders data={topLated} title=\"여러 사람들이 극찬한 영화 최고평점 영화들!\" sliderNum={3} clickSlider={clickSlider} />\r\n                </SliderWrap>\r\n                <SliderWrap onClick={() => setClickSlider(4)}>\r\n                    <Sliders data={upComing} title=\"곧 영화관에서 만나요!\" sliderNum={4} clickSlider={clickSlider} />\r\n                </SliderWrap>\r\n            </>\r\n        )\r\n        }\r\n        </Wrapper >\r\n    );\r\n}\r\n\r\nexport default Home;","import { useQuery } from \"react-query\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { getSearchMovies, getSearchTv, IGetMoviesResult } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\n\r\nconst Wrapper = styled.div`\r\nbackground-color: black;\r\noverflow-x: hidden;\r\noverflow-y: hidden;\r\n`;\r\nconst Title = styled.div`\r\n font-family: \"GmarketSansMedium\";\r\n    font-weight: bold;\r\n    margin-top: 120px;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n\r\n`;\r\nconst SimCover = styled.div`\r\n    width: 150px;\r\n    height: 200px;\r\n    margin: 10px 10px;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    position: relative;\r\n`;\r\nconst SimTitle = styled.div`\r\n    font-family: \"GmarketSansLight\";\r\n    font-weight: bold;\r\n    position: absolute;\r\n    bottom: 15px;\r\n    left: 0px;\r\n    right: 0px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n`;\r\n\r\nfunction Search() {\r\n    const location = useLocation();\r\n    const keyword = new URLSearchParams(location.search).get(\"keyword\");\r\n    const { data: movieData, isLoading } = useQuery<IGetMoviesResult>([\"simMovies\", keyword], () => getSearchMovies(keyword + \"\"));\r\n    const { data: tvData } = useQuery<IGetMoviesResult>([\"simTV\", keyword], () => getSearchTv(keyword + \"\"));\r\n    console.log(tvData);\r\n    return (\r\n        <Wrapper>\r\n            {\r\n\r\n                isLoading ? \"Loding...\" :\r\n                    <>\r\n                        <Title>\r\n                            - {keyword} 관련 영화 <br />\r\n                        </Title>\r\n                        <Wrap>\r\n                            {movieData?.results.map((list) => {\r\n                                return (\r\n                                    <SimCover\r\n                                        key={list.id}\r\n                                        style={{ backgroundImage: `linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.8)) ,url(${makeImagePath(list.backdrop_path, \"w300\")})` }}>\r\n                                        <SimTitle>{list.title}</SimTitle>\r\n                                    </SimCover>\r\n                                );\r\n                            })}\r\n                        </Wrap>\r\n                        <Title>\r\n                            - {keyword} 관련 TV 시리즈 <br />\r\n                        </Title>\r\n                        <Wrap>\r\n                            {tvData?.results.map((list) => {\r\n                                return (\r\n                                    <SimCover\r\n                                        key={list.id}\r\n                                        style={{ backgroundImage: `url(${makeImagePath(list.backdrop_path, \"w300\")})` }}>\r\n                                        <SimTitle>{list.name}</SimTitle>\r\n                                    </SimCover>\r\n                                );\r\n                            })}\r\n                        </Wrap>\r\n                    </>\r\n            }\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Search;","export default __webpack_public_path__ + \"static/media/kakaoLogo.af437b99.svg\";","export default __webpack_public_path__ + \"static/media/faceBookLogo.5be01c01.svg\";","export default __webpack_public_path__ + \"static/media/googleLogo.d7184eed.svg\";","export default __webpack_public_path__ + \"static/media/tweeterLogo.b905b5f9.svg\";","export default __webpack_public_path__ + \"static/media/appleLogo.ec3b8ba6.svg\";","export default __webpack_public_path__ + \"static/media/lineLogo.5d8d5afa.svg\";","import { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { getMovies, IGetMoviesResult } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport kakoLogo from \"../img/kakaoLogo.svg\";\r\nimport faceBookLogo from \"../img/faceBookLogo.svg\";\r\nimport googleLogo from \"../img/googleLogo.svg\";\r\nimport tweeterLogo from \"../img/tweeterLogo.svg\";\r\nimport appleLogo from \"../img/appleLogo.svg\";\r\nimport lineLogo from \"../img/lineLogo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Banner = styled.div < { bgPhoto: string }>`\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 60px;\r\n    background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 1)), url(${(props) => props.bgPhoto});\r\n    background-size: cover;\r\n    `;\r\n\r\nconst SignInWrap = styled.div`\r\n    width: 300px;\r\n    height: 300px;\r\n`;\r\n\r\nconst TitleWrap = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    h4{\r\n        font-family: \"GmarketSansMedium\";\r\n        font-weight: bold;\r\n    }\r\n    span{\r\n        font-family: \"GmarketSansLight\";\r\n        font-weight: bold;\r\n        font-size: 11px;\r\n        color: rgba(255, 255, 255, 0.5);\r\n        &:hover{\r\n            text-decoration: underline;\r\n        }\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst InputWrap = styled.div`\r\n    margin-top: 15px;\r\n    input::placeholder{\r\n        font-family: GmarketSansLight;\r\n        font-weight: bold;\r\n    }\r\n    input:focus{\r\n        outline: none;\r\n    }\r\n    input:first-child{\r\n        width: 100%;\r\n        height: 45px;\r\n        border-top-left-radius: 5px;\r\n        border-top-right-radius: 5px;\r\n        border: none;\r\n        border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n        padding-left: 10px;\r\n    }\r\n    input:last-child{\r\n        width: 100%;\r\n        height: 45px;\r\n        border-bottom-left-radius: 5px;\r\n        border-bottom-right-radius: 5px;\r\n        border: none;\r\n        padding-left: 10px\r\n    }\r\n`;\r\n\r\n\r\nconst SignInBtn = styled.button`\r\n    width: 100%;\r\n    height: 50px;\r\n    margin-top: 15px;\r\n    background-color: rgba(255, 4, 88, 0.5);\r\n    border: none;\r\n    border-radius: 40px;\r\n    color: white;\r\n    font-family: \"GmarketSansMedium\";\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    `;\r\n\r\nconst AnotherSignIn = styled.div`\r\n        margin-top: 15px;\r\n        font-family: \"GmarketSansLight\";\r\n        font-weight: bold;\r\n        font-size: 11px;\r\n        color: rgba(255, 255, 255, 0.7);\r\n        padding-top: 15px;\r\n        border-top: 1px solid rgba(255, 255, 255, 0.2);\r\n    `;\r\n\r\nconst SnsLogoWrap = styled.ul`\r\n    margin-top: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    img{\r\n        cursor: pointer;\r\n    }\r\n`;\r\nfunction SignIn() {\r\n    const { data } = useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies);\r\n    return (\r\n        <>\r\n            <Banner bgPhoto={makeImagePath(data?.results[1].backdrop_path || \"\")} >\r\n                <SignInWrap>\r\n                    <TitleWrap>\r\n                        <h4>로그인</h4>\r\n                        <span>비밀번호를 잊어버리셨나요?</span>\r\n                    </TitleWrap>\r\n                    <InputWrap>\r\n                        <input placeholder=\"이메일 (example@gmail.com)\"></input>\r\n                        <input placeholder=\"비밀번호\"></input>\r\n                    </InputWrap>\r\n                    <Link to=\"/home\">\r\n                        <SignInBtn>로그인</SignInBtn>\r\n                    </Link>\r\n                    <AnotherSignIn> 다른 방법으로 로그인하기 </AnotherSignIn>\r\n                    <SnsLogoWrap>\r\n                        <img alt=\"kako\" src={kakoLogo} />\r\n                        <img alt=\"faceBook\" src={faceBookLogo} />\r\n                        <img alt=\"google\" src={googleLogo} />\r\n                        <img alt=\"tweeter\" src={tweeterLogo} />\r\n                        <img alt=\"apple\" src={appleLogo} />\r\n                        <img alt=\"line\" src={lineLogo} />\r\n                    </SnsLogoWrap>\r\n                </SignInWrap>\r\n            </Banner>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignIn;","import React, { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { getMovies, IGetMoviesResult } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\n\r\nconst Banner = styled.div < { bgPhoto: string }>`\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 60px;\r\n    background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 1)), url(${(props) => props.bgPhoto});\r\n    background-size: cover;\r\n    `;\r\n\r\nconst SignUpWrap = styled.div`\r\n    width: 300px;\r\n    height: 300px;\r\n`;\r\n\r\nconst TitleWrap = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    h4{\r\n        font-family: \"GmarketSansMedium\";\r\n        font-weight: bold;\r\n    }\r\n    span{\r\n        font-family: \"GmarketSansLight\";\r\n        font-weight: bold;\r\n        font-size: 11px;\r\n        color: rgba(255, 255, 255, 0.5);\r\n        &:hover{\r\n            text-decoration: underline;\r\n        }\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst InputWrap = styled.div`\r\n    margin-top: 15px;\r\n    input::placeholder{\r\n        font-family: GmarketSansLight;\r\n        font-weight: bold;\r\n    }\r\n    input:focus{\r\n        outline: none;\r\n    }\r\n    input:first-child{\r\n        width: 100%;\r\n        height: 45px;\r\n        border-top-left-radius: 5px;\r\n        border-top-right-radius: 5px;\r\n        border: none;\r\n        border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n        padding-left: 10px;\r\n    }\r\n    input:nth-child(2){\r\n        width: 100%;\r\n        height: 45px;\r\n        border: none;\r\n        border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n        padding-left: 10px;\r\n    }\r\n    input:last-child{\r\n        width: 100%;\r\n        height: 45px;\r\n        border-bottom-left-radius: 5px;\r\n        border-bottom-right-radius: 5px;\r\n        border: none;\r\n        padding-left: 10px\r\n    }\r\n`;\r\n\r\nconst CheckBoxWrap = styled.div`\r\n    font-size: 11px;\r\n    margin-top: 15px;\r\n    color: rgba(255, 255, 255, 0.5);\r\n    hr{\r\n        opacity: 0.3;\r\n}\r\n    label{\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst SignUpBtn = styled.button`\r\n    width: 100%;\r\n    height: 50px;\r\n    margin-top: 15px;\r\n    background-color: rgba(255, 4, 88, 0.5);\r\n    border: none;\r\n    border-radius: 40px;\r\n    color: white;\r\n    font-family: \"GmarketSansMedium\";\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    `;\r\n\r\n\r\nfunction SignUp() {\r\n    const { data } = useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies);\r\n    const [allChecked, setAllChecked] = useState(false);\r\n    const onAllCheck = () => {\r\n        setAllChecked((prev) => !prev);\r\n    }\r\n\r\n    return (\r\n        <Banner bgPhoto={makeImagePath(data?.results[1].backdrop_path || \"\")} >\r\n            <SignUpWrap>\r\n                <TitleWrap>\r\n                    <h4>회원가입</h4>\r\n                </TitleWrap>\r\n                <InputWrap>\r\n                    <input placeholder=\"이름 (2자 이상)\"></input>\r\n                    <input placeholder=\"이메일 (example@gmail.com)\"></input>\r\n                    <input placeholder=\"영문, 숫자, 특문 중 2개 조합 10자이상\"></input>\r\n                </InputWrap>\r\n                <CheckBoxWrap>\r\n                    <input onClick={onAllCheck} type=\"checkbox\" id=\"allChk\" />\r\n                    <label htmlFor=\"allChk\"> 전체 약관에 동의합니다. </label>\r\n                    <hr />\r\n                    {allChecked ?\r\n                        <>\r\n                            <input type=\"checkbox\" id=\"1stChk\" checked={allChecked} />\r\n                            <label htmlFor=\"1stChk\"> 만 14세 이상입니다. </label> <br />\r\n                            <input type=\"checkbox\" id=\"2ndChk\" checked={allChecked} />\r\n                            <label htmlFor=\"2ndChk\"> 서비스 이용약관에 동의합니다(필수) </label><br />\r\n                            <input type=\"checkbox\" id=\"3rdChk\" checked={allChecked} />\r\n                            <label htmlFor=\"3rdChk\"> 개인정보 수집 및 이용에 대한 안내에 동의합니다(필수) </label><br />\r\n                            <input type=\"checkbox\" id=\"4thChk\" checked={allChecked} />\r\n                            <label htmlFor=\"4thChk\"> 신작 알림 이벤트 정보 수신에 동의합니다(선택) </label><br />\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <input type=\"checkbox\" id=\"1stChk\" />\r\n                            <label htmlFor=\"1stChk\"> 만 14세 이상입니다. </label> <br />\r\n                            <input type=\"checkbox\" id=\"2ndChk\" />\r\n                            <label htmlFor=\"2ndChk\"> 서비스 이용약관에 동의합니다(필수) </label><br />\r\n                            <input type=\"checkbox\" id=\"3rdChk\" />\r\n                            <label htmlFor=\"3rdChk\"> 개인정보 수집 및 이용에 대한 안내에 동의합니다(필수) </label><br />\r\n                            <input type=\"checkbox\" id=\"4thChk\" />\r\n                            <label htmlFor=\"4thChk\"> 신작 알림 이벤트 정보 수신에 동의합니다(선택) </label><br />\r\n                        </>\r\n                    }\r\n                </CheckBoxWrap>\r\n                <Link to=\"/signIn\">\r\n                    <SignUpBtn>계정 생성하기</SignUpBtn>\r\n                </Link>\r\n            </SignUpWrap>\r\n        </Banner >\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport ReactPlayer from 'react-player'\r\n\r\nconst Section = styled.div` \r\n    width: 100%;\r\n    height: 100vh;\r\n    background-color: linear-gradient(135deg, #19000B, #2D0013);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n`;\r\nconst LogoImg = styled.img`\r\n    width: 200px;\r\n    height: 191px;\r\n    margin-left: 50px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\nfont-family: \"GmarketSansMedium\";\r\n    font-weight: bold;\r\n    margin-top: 10px;\r\n    font-size: 23px;\r\n    margin-left: 50px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n    margin-top: 20px;\r\n    font-family: \"GmarketSansLight\";\r\n    font-weight: bold;\r\n    margin-left: 50px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    border: none;\r\n    width: 170px;\r\n    height: 50px;\r\n    background-color: rgba(183, 31, 108, 0.5);\r\n    border-radius: 50px;\r\n    margin-top: 20px;\r\n    font-family: \"GmarketSansMedium\";\r\n    font-weight: bold;\r\n    font-size: 15px;\r\n    color: white; \r\n    margin-left: 50px;\r\n    position: relative;\r\n    z-index: 99;\r\n    cursor: pointer;\r\n    transition: 1s;\r\n    &:hover{\r\n        background-color: rgba(183, 31, 108, 1);\r\n    }\r\n`;\r\n\r\nconst BgVideo = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nfunction Start() {\r\n\r\n    return (\r\n        <>\r\n            <Section>\r\n                <BgVideo>\r\n                    <ReactPlayer\r\n                        className='react-player'\r\n                        url={[\r\n                            'https://www.youtube.com/watch?v=AAnkc01ITpw',\r\n                            'https://www.youtube.com/watch?v=NtkbmqOqY0c',\r\n                        ]}\r\n                        width='100%'\r\n                        height='100%'\r\n                        playing={true}\r\n                        muted={true}\r\n                        controls={false}\r\n                        light={false}\r\n                        style={{ zIndex: -1, position: \"relative\", opacity: 0.5 }}\r\n                    />\r\n                </BgVideo>\r\n                <LogoImg src={`${process.env.PUBLIC_URL}/asset/monviewLogoVer1.png`} />\r\n                <Title>영화,드라마,예능,다큐멘터리를 무제한으로!</Title>\r\n                <Description>\r\n                    액션 영화와 TV를 좋아하시나요? MonView가 여러분을 위해 준비했습니다! <br />\r\n                    사용하는 모든 기기에서 영화 및 TV 프로그램을 스트리밍하세요! <br />\r\n                    합리적인 가격으로 가족, 친구들과 함께 즐겨요!<br />\r\n                </Description>\r\n                <Link to='/home'>\r\n                    <Button>2주 무료 이용 시작</Button>\r\n                </Link>\r\n            </Section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Start;","import { AnimatePresence, motion, useViewportScroll } from \"framer-motion\";\r\nimport { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { makeImagePath } from \"../../utils\";\r\nimport { getSimilarTV, IGetMoviesResult } from \"../../api\";\r\n\r\n\r\nconst SliderBtn = styled.button`\r\n    width: 40px;\r\n    height: 200px;\r\n    z-index: 99;\r\n    background-color: rgba(255,255,255,0.4);\r\n    border: none;\r\n    cursor: pointer;\r\n    &:last-child{\r\n        position: absolute;\r\n        right: 0;\r\n    }\r\n`;\r\nconst Slider = styled(motion.div)`\r\n    margin-top: 80px;\r\n    width: 100%;\r\n    position: relative;\r\n    top: -100px;\r\n    display: grid;\r\n    h1{\r\n        position: absolute;\r\n        top: -40px;\r\n        left: 20px;\r\n        font-weight: bold;\r\n        font-size: 20px;\r\n    }\r\n`;\r\nconst Row = styled(motion.div)`\r\n    display: grid;\r\n    gap: 10px;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    margin-bottom: 5px;\r\n    position: absolute;\r\n    width: 100%;\r\n    padding: 0px 50px;\r\n`;\r\nconst Box = styled(motion.div) <{ bgPhoto: string }>`\r\n    background-image: url(${(props) => props.bgPhoto});\r\n    background-size: cover;\r\n    background-position: center center;\r\n    height: 200px;\r\n    font-size: 68px;\r\n    &:first-child{\r\n        transform-origin: center left;   /*{첫번째 box만 애니메이션 중심 왼쪽 중앙}*/\r\n    }\r\n    &:last-child{\r\n        transform-origin: center right; /*{마지막 box만 애니메이션 중심 왼쪽 중앙}*/\r\n    }\r\n    cursor: pointer;\r\n`;\r\nconst Info = styled(motion.div)`\r\n    padding: 10px;\r\n    background-color: ${(props) => props.theme.black.lighter};\r\n    opacity: 0;\r\n    position: absolute;\r\n    width: 100%;\r\n    bottom: 0;\r\n    h4{\r\n        text-align: center;\r\n        font-size: 18px;\r\n    }\r\n`;\r\nconst rowVariants = {\r\n    hidden: (back: boolean) => ({\r\n        x: back ? -window.innerWidth - 5 : window.innerWidth + 5,\r\n    }),\r\n    visible: {\r\n        x: 0,\r\n    },\r\n    exiting: (back: boolean) => ({\r\n        x: back ? window.innerWidth + 5 : -window.innerWidth - 5,\r\n    }),\r\n};\r\nconst BoxVariants = {\r\n    normal: {\r\n        scale: 1,\r\n    },\r\n    hover: {\r\n        scale: 1.3,\r\n        y: -50,\r\n        transition: {\r\n            delay: 0.3,\r\n            duration: 0.1,\r\n            type: \"tween\",\r\n        }\r\n    }\r\n};\r\nconst infoVariants = {\r\n    hover: {\r\n        opacity: 1,\r\n        transition: {\r\n            delay: 0.3,\r\n            duration: 0.1,\r\n            type: \"tween\",\r\n        }\r\n    }\r\n}\r\nconst Overlay = styled(motion.div)`\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    opacity: 0;\r\n`;\r\nconst BigMovie = styled(motion.div)`\r\n    position: absolute;\r\n    z-index: 99;\r\n    width: 40vw;\r\n    height: 100vh;\r\n    left: 0;\r\n    right: 0;\r\n    margin: 0 auto;\r\n    border-radius: 15px;\r\n    overflow: hidden;\r\n    background-color: ${(props) => props.theme.black.lighter};\r\n`;\r\nconst BigCover = styled.div`\r\n    width: 100%;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    height: 400px;\r\n`;\r\nconst BigTitle = styled.h3`\r\n    color: ${(props) => props.theme.white.lighter};\r\n    padding: 20px;\r\n    font-size: 30px;\r\n    position: relative;\r\n    top: -130px;\r\n    `;\r\nconst IconWrap = styled.div`\r\n    padding-top: 10px;\r\n    padding-left: 10px;\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 20px;\r\n    `;\r\nconst Icons = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    \r\n`;\r\nconst IconCircle = styled(motion.div)`\r\n    margin-left: 20px;\r\n    width: 40px;\r\n    height: 40px;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    border: 1px solid rgba(255, 255, 255, 0.5);\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    &:hover{\r\n        background-color: rgba(255, 255, 255, 0.5);\r\n        border: 1px solid rgba(255, 255, 255, 0.7);\r\n    }\r\n    `;\r\nconst BigInfo = styled.span`\r\n    width: 100%;\r\n    margin-right: 30px;\r\n    padding-top: 10px;\r\n    padding-left: 120px;\r\n    font-family: \"GmarketSansLight\";\r\n    font-weight: bold;\r\n    font-size: 13px;\r\n    span{\r\n        font-family: \"GmarketSansMedium\";\r\n        font-weight: bold;\r\n    }\r\n`;\r\nconst BigOverview = styled.p`\r\n    padding: 20px;\r\n    color: ${(props) => props.theme.white.lighter};\r\n    top: -80px;\r\n    position: relative;\r\n`;\r\nconst SimWrap = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    position: relative;\r\n    top: -70px;\r\n`;\r\nconst SimInfo = styled.span`\r\n    font-family: \"GmarketSansMedium\";\r\n    font-weight: bold;\r\n    padding-left: 10px;\r\n    position: relative;\r\n    top: -70px;\r\n`;\r\nconst SimCover = styled.div`\r\n    width: 100%;\r\n    height: 250px;\r\n    margin: 0px 10px;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    position: relative;\r\n`;\r\nconst SimTitle = styled.div`\r\n    font-family: \"GmarketSansLight\";\r\n    font-weight: bold;\r\n    position: absolute;\r\n    bottom: 15px;\r\n    left: 0px;\r\n    right: 0px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst offset = 6;\r\nlet selectTvId = 0;\r\nfunction TvSliders({ data, title, sliderNum, clickSlider }: any) {\r\n    const { data: simData } = useQuery<IGetMoviesResult>([\"simTV\", selectTvId], () => getSimilarTV(selectTvId));\r\n    const history = useHistory();\r\n    const bigMovieMatch = useRouteMatch<{ tvId: string }>(\"/tv/:tvId\");\r\n    const { scrollY } = useViewportScroll();\r\n    const [index, setIndex] = useState(0);\r\n    const [leaving, setLeaving] = useState(false);\r\n    const [back, setBack] = useState(false);\r\n\r\n    const increaseIndex = () => {\r\n        if (data) {\r\n            if (leaving) return;\r\n            setBack(false);\r\n            toggleLeaving();\r\n            const totalTvs = data?.results.length - 1;\r\n            const maxIndex = Math.floor(totalTvs / offset) - 1;\r\n            setIndex((prev) => prev === maxIndex ? 0 : prev + 1);\r\n        }\r\n    };\r\n    const decreaseIndex = () => {\r\n        if (data) {\r\n            if (leaving) return;\r\n            setBack(true);\r\n            toggleLeaving();\r\n            const totalTvs = data?.results.length - 1;\r\n            const maxIndex = Math.floor(totalTvs / offset) - 1;\r\n            setIndex((prev) => prev === 0 ? maxIndex : prev - 1);\r\n        }\r\n    };\r\n\r\n    const toggleLeaving = () => setLeaving((prev) => !prev);\r\n    const onBoxClicked = (tvId: number) => {\r\n        history.push(`/tv/${tvId}`);\r\n        selectTvId = tvId;\r\n    };\r\n    const onOverlayClick = () => history.push(\"/tv\");\r\n    const clickedMovie = bigMovieMatch?.params.tvId &&\r\n        data?.results.find((tv: any) => String(tv.id) === bigMovieMatch.params.tvId);\r\n\r\n    return (\r\n        <>\r\n            <Slider>\r\n                <h1>{title} </h1>\r\n                <AnimatePresence custom={back} initial={false} onExitComplete={toggleLeaving}>\r\n                    <SliderBtn onClick={decreaseIndex}><i className=\"fas fa-chevron-left fa-2x\"></i></SliderBtn>\r\n                    <Row\r\n                        variants={rowVariants}\r\n                        custom={back}\r\n                        initial=\"hidden\"\r\n                        animate=\"visible\"\r\n                        exit=\"exiting\"\r\n                        transition={{ type: \"tween\", duration: 1 }}\r\n                        key={index}\r\n                    >\r\n                        {data?.results.slice(1)\r\n                            .slice(offset * index, offset * index + offset)\r\n                            .map((tv: any) => (\r\n                                <Box\r\n                                    layoutId={tv.id + \"\" + sliderNum}\r\n                                    key={tv.id}\r\n                                    whileHover=\"hover\"\r\n                                    initial=\"normal\"\r\n                                    variants={BoxVariants}\r\n                                    onClick={() => onBoxClicked(tv.id)}\r\n                                    transition={{ type: \"tween\" }}\r\n                                    bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\r\n                                ><Info variants={infoVariants} >\r\n                                        <h4>{tv.name}</h4>\r\n                                    </Info>\r\n                                </Box>\r\n                            ))}\r\n                    </Row>\r\n                </AnimatePresence>\r\n                <SliderBtn onClick={increaseIndex}><i className=\"fas fa-chevron-right fa-2x\"></i></SliderBtn>\r\n            </Slider>\r\n            <AnimatePresence>\r\n                {bigMovieMatch && clickSlider === sliderNum ?\r\n                    <>\r\n                        <Overlay\r\n                            onClick={onOverlayClick}\r\n                            animate={{ opacity: 1 }}\r\n                            exit={{ opacity: 0 }}\r\n                        />\r\n                        <BigMovie\r\n                            style={{ top: scrollY.get() + 100, }}\r\n                            layoutId={bigMovieMatch.params.tvId + sliderNum}\r\n                        >\r\n                            {clickedMovie && <>\r\n                                <BigCover style={{ backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(clickedMovie.backdrop_path, \"w500\")})` }} />\r\n                                <IconWrap>\r\n                                    <Icons>\r\n                                        <IconCircle>\r\n                                            <i className=\"fas fa-plus\"></i>\r\n                                        </IconCircle>\r\n                                        <IconCircle>\r\n                                            <i className=\"far fa-thumbs-up\"></i>\r\n                                        </IconCircle>\r\n                                        <IconCircle>\r\n                                            <i className=\"far fa-thumbs-down\"></i>\r\n                                        </IconCircle>\r\n                                    </Icons>\r\n                                    <BigInfo>\r\n                                        <span>첫방송:</span> {clickedMovie.first_air_date} <br />\r\n                                        <span>평점:</span> {clickedMovie.vote_average}\r\n                                    </BigInfo>\r\n                                </IconWrap>\r\n                                <BigTitle>{clickedMovie.name}</BigTitle>\r\n                                <BigOverview>{clickedMovie.overview}</BigOverview>\r\n                            </>}\r\n                            <SimInfo>당신이 좋아할 TV 쇼!</SimInfo>\r\n                            <SimWrap>\r\n                                {simData?.results.slice(0, 4).map((list) => (\r\n                                    <SimCover key={list.id} style={{ backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(list.backdrop_path)})` }}>\r\n                                        <SimTitle>{list.name}</SimTitle>\r\n                                    </SimCover>\r\n                                ))}\r\n                            </SimWrap>\r\n                        </BigMovie>\r\n                    </>\r\n                    :\r\n                    null\r\n                }\r\n            </AnimatePresence>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TvSliders;","import { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { getAiringTV, getLatestTV, getTopRatedTV, getTV, IGetMoviesResult } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport TvSliders from \"./Components/TvSliders\";\r\n\r\nconst Wrapper = styled.div`\r\nbackground-color: black;\r\noverflow-x: hidden;\r\noverflow-y: hidden;\r\n`;\r\nconst Loader = styled.div`\r\n    height: 20vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\nconst Banner = styled.div < { bgPhoto: string }>`\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    padding: 60px;\r\n    background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${(props) => props.bgPhoto});\r\n    background-size: cover;\r\n`;\r\nconst Title = styled.h2`\r\n    font-size: 68px;\r\n    font-family: \"GmarketSansMedium\";\r\n    font-weight: bold;\r\n`;\r\nconst Overview = styled.p`\r\n    font-size: 25px;\r\n    width: 50%;\r\n    font-family: \"GmarketSansLight\";\r\n`;\r\nconst SliderWrap = styled.div``;\r\n\r\nfunction Tv() {\r\n    const { data, isLoading } = useQuery<IGetMoviesResult>([\"tv\", \"nowPlaying\"], getTV);\r\n    const { data: topRadted } = useQuery<IGetMoviesResult>([\"topRadtedTv\", \"topRadted\"], getTopRatedTV);\r\n    const { data: airing } = useQuery<IGetMoviesResult>([\"airingTv\", \"airing\"], getAiringTV);\r\n    const { data: latest } = useQuery<IGetMoviesResult>([\"latestTv\", \"latest\"], getLatestTV);\r\n    const [clickSlider, setClickSlider] = useState(0);\r\n    return (\r\n        <Wrapper>{isLoading ? (\r\n            <Loader>Loading...</Loader>\r\n        ) : (\r\n            <>\r\n                <Banner bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}>\r\n                    <Title>{data?.results[0].name}</Title>\r\n                    <Overview>{data?.results[0].overview}</Overview>\r\n                </Banner>\r\n\r\n                <SliderWrap onClick={() => setClickSlider(1)}>\r\n                    <TvSliders data={data} title=\"시청률 상승기류 타는중!\" sliderNum={1} clickSlider={clickSlider} />\r\n                </SliderWrap>\r\n                <SliderWrap onClick={() => setClickSlider(2)}>\r\n                    <TvSliders data={topRadted} title=\"현재 상위 랭킹 프로그램! \" sliderNum={2} clickSlider={clickSlider} />\r\n                </SliderWrap>\r\n                <SliderWrap onClick={() => setClickSlider(3)}>\r\n                    <TvSliders data={airing} title=\"오늘 새로운 에피소드 방영 예정!\" sliderNum={3} clickSlider={clickSlider} />\r\n                </SliderWrap>\r\n                <SliderWrap onClick={() => setClickSlider(4)}>\r\n                    <TvSliders data={latest} title=\"최신 Tv 시리즈!\" sliderNum={4} clickSlider={clickSlider} />\r\n                </SliderWrap>\r\n            </>\r\n        )\r\n        }\r\n        </Wrapper >\r\n    );\r\n}\r\n\r\nexport default Tv;","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Header from \"./Routes/Components/Header\";\nimport Home from \"./Routes/Home\";\nimport Search from \"./Routes/Search\";\nimport SignIn from \"./Routes/SignIn\";\nimport SignUp from \"./Routes/SignUp\";\nimport Start from \"./Routes/Start\";\nimport Tv from \"./Routes/Tv\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/search\">\n          <Header />\n          <Search />\n        </Route>\n        <Route path=\"/signUp\">\n          <Header />\n          <SignUp />\n        </Route>\n        <Route path=\"/signIn\">\n          <Header />\n          <SignIn />\n        </Route>\n        <Route path={[\"/tv\", \"/tv/:tvId\"]}>\n          <Header />\n          <Tv />\n        </Route>\n        <Route path={[\"/home\", \"/movies/:movieId\"]}>\n          <Header />\n          <Home />\n        </Route>\n        <Route path=\"/\">\n          <Start />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport '@fortawesome/fontawesome-free/js/all.js'\n\nconst GlobalStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  color: ${(props) => props.theme.white.darker};\n  line-height: 1.2;\n  background-color: black;}\n\na {\n  text-decoration:none;\n  color:inherit;\n}\n@font-face {\n    font-family: 'GmarketSansMedium';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansMedium.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n}\n@font-face {\n    font-family: 'GmarketSansLight';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansLight.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n}\n`;\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n    red: \"#E51013\",\r\n    black: {\r\n        veryDark: \"#141414\",\r\n        darker: \"#181818\",\r\n        lighter: \"#2F2F2F\",\r\n    },\r\n    white: {\r\n        lighter: \"#fff\",\r\n        darker: \"#e5e5e5\",\r\n    },\r\n};"],"sourceRoot":""}